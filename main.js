(()=>{"use strict";var r={426:(r,n,e)=>{e.d(n,{Z:()=>l});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),A=e(667),c=e.n(A),s=new URL(e(427),e.b),p=a()(o());p.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap);"]);var d=c()(s);p.push([r.id,"input {\r\n    font-family: 'Nunito', sans-serif;\r\n}\r\n\r\nbody {\r\n  background: url("+d+") center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 3px #000;\r\n\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n\r\n}\r\n\r\n.weather-forecast{\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    color: #fff;\r\n    border-radius: 10px;\r\n\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 5vw;\r\n  z-index: 1;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n\r\n#search-wrapper{\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n}\r\n\r\n#search-wrapper:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#city-input{\r\n    background: transparent;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n    width: 400px;\r\n    font-size: 1.5rem;\r\n    padding: 0;\r\n    color:#fff;\r\n    cursor: pointer;\r\n    line-height: 50px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#city-input:focus{\r\n    outline: none;\r\n\r\n}\r\n\r\n#city-input::placeholder{\r\n    color: #fff;\r\n    text-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    opacity: 0.5;\r\n\r\n}\r\n\r\n\r\n\r\n#search-icon{\r\n  color: #fff;\r\n  position: relative;\r\n  left: -30px;\r\n  font-size: 1.5rem;\r\n  cursor:pointer;\r\n}\r\n\r\n#search-icon:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#search-icon:active{\r\n  transform: scale(0.90);\r\n}\r\n\r\n.header{\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    width: 500px;\r\n}\r\n\r\n#select-wrapper{\r\n  font-size: 1.5rem;\r\n  width: 60px;\r\n  color: #fff;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-top: 0;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n}\r\n\r\n#select-wrapper{\r\n  opacity: 0.5;\r\n}\r\n\r\n#select-wrapper:hover, #select-wrapper:focus, #select-wrapper:active{\r\n  opacity: 1;\r\n}\r\n\r\n#unit-select{\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n}\r\n\r\n\r\n\r\n\r\n.drop-down{\r\n    height: 100px;\r\n    position: absolute;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    z-index: 99;\r\n    display: none;\r\n\r\n}\r\n\r\n#option-one{\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n}\r\n\r\n#option-one, #option-two{\r\n  line-height: 50px;\r\n    width: 60px;\r\n    opacity: 0.8;\r\n}\r\n\r\n#option-one:hover, #option-two:hover{\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n}\r\n\r\n\r\n#weekly-forecast{\r\n    width: 95vw;\r\n    height: 250px;\r\n    margin-bottom: 1vw;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n}\r\n\r\n#error-message{\r\n  color: red;\r\n text-shadow: 1px 1px 0px #000;\r\npadding-top: -10px;\r\n margin-bottom: -50px;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,iCAAiC;AACrC;;AAEA;EACE,uEAAqD;EACrD,sBAAsB;EACtB,4BAA4B;EAC5B,iCAAiC;EACjC,6BAA6B;;AAE/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;;AAElB;;AAEA;IACI,2CAA2C;IAC3C,0BAA0B;IAC1B,0EAA0E;IAC1E,WAAW;IACX,mBAAmB;;AAEvB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,YAAY;AACd;;AAEA;EACE,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;;EAEhB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;;AAEnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;IACI,iBAAiB;AACrB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,UAAU;AACZ;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,eAAe;IACf,aAAa;IACb,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;IACjB,UAAU;IACV,UAAU;IACV,eAAe;IACf,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;;AAEjB;;AAEA;IACI,WAAW;IACX,2EAA2E;IAC3E,YAAY;;AAEhB;;;;AAIA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,WAAW;EACX,cAAc;EACd,eAAe;EACf,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;IACI,4CAA4C;AAChD;;;;;AAKA;IACI,aAAa;IACb,kBAAkB;IAClB,2CAA2C;IAC3C,0BAA0B;IAC1B,0EAA0E;IAC1E,WAAW;IACX,aAAa;;AAEjB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;EACE,iBAAiB;IACf,WAAW;IACX,YAAY;AAChB;;AAEA;IACI;AACJ;;;AAGA;IACI,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,qCAAqC;AACzC;;AAEA;EACE,UAAU;CACX,6BAA6B;AAC9B,kBAAkB;CACjB,oBAAoB;AACrB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap');\r\n\r\ninput {\r\n    font-family: 'Nunito', sans-serif;\r\n}\r\n\r\nbody {\r\n  background: url('imgs/sunny.jpg') center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 3px #000;\r\n\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n\r\n}\r\n\r\n.weather-forecast{\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    color: #fff;\r\n    border-radius: 10px;\r\n\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 5vw;\r\n  z-index: 1;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n\r\n#search-wrapper{\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n}\r\n\r\n#search-wrapper:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#city-input{\r\n    background: transparent;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n    width: 400px;\r\n    font-size: 1.5rem;\r\n    padding: 0;\r\n    color:#fff;\r\n    cursor: pointer;\r\n    line-height: 50px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#city-input:focus{\r\n    outline: none;\r\n\r\n}\r\n\r\n#city-input::placeholder{\r\n    color: #fff;\r\n    text-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    opacity: 0.5;\r\n\r\n}\r\n\r\n\r\n\r\n#search-icon{\r\n  color: #fff;\r\n  position: relative;\r\n  left: -30px;\r\n  font-size: 1.5rem;\r\n  cursor:pointer;\r\n}\r\n\r\n#search-icon:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#search-icon:active{\r\n  transform: scale(0.90);\r\n}\r\n\r\n.header{\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    width: 500px;\r\n}\r\n\r\n#select-wrapper{\r\n  font-size: 1.5rem;\r\n  width: 60px;\r\n  color: #fff;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-top: 0;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n}\r\n\r\n#select-wrapper{\r\n  opacity: 0.5;\r\n}\r\n\r\n#select-wrapper:hover, #select-wrapper:focus, #select-wrapper:active{\r\n  opacity: 1;\r\n}\r\n\r\n#unit-select{\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n}\r\n\r\n\r\n\r\n\r\n.drop-down{\r\n    height: 100px;\r\n    position: absolute;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    z-index: 99;\r\n    display: none;\r\n\r\n}\r\n\r\n#option-one{\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n}\r\n\r\n#option-one, #option-two{\r\n  line-height: 50px;\r\n    width: 60px;\r\n    opacity: 0.8;\r\n}\r\n\r\n#option-one:hover, #option-two:hover{\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n}\r\n\r\n\r\n#weekly-forecast{\r\n    width: 95vw;\r\n    height: 250px;\r\n    margin-bottom: 1vw;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n}\r\n\r\n#error-message{\r\n  color: red;\r\n text-shadow: 1px 1px 0px #000;\r\npadding-top: -10px;\r\n margin-bottom: -50px;\r\n}"],sourceRoot:""}]);const l=p},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<r.length;s++){var p=[].concat(r[s]);t&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],A=0;A<r.length;A++){var c=r[A],s=t.base?c[0]+t.base:c[0],p=i[s]||0,d="".concat(s," ").concat(p);i[s]=p+1;var l=e(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var f=o(u,t);t.byIndex=A,n.splice(A,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var A=e(i[a]);n[A].references--}for(var c=t(r,o),s=0;s<i.length;s++){var p=e(i[s]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}i=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},427:(r,n,e)=>{r.exports=e.p+"7efdee94197c5361067c.jpg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{function r(r,n){switch(n){case"imperial":return"".concat(r," °F");case"metric":return"".concat(r," °C")}}const n=e.p+"ac6841b2d35265cc4ac8.jpg";var t=e(427);const o=e.p+"aab7312709c244ba19d9.jpg",i=e.p+"33345080344652cdfa4e.jpg",a=e.p+"d7f8b6e2ffd6282237d9.jpg";let A="imperial",c="Fort Worth";async function s(e,A){try{document.getElementById("error-message")&&document.getElementById("error-message").remove();const c=await async function(r,n){try{const e=await fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat(r,"&units=").concat(n,"&appid=").concat("c4cb26845ca9df5bbedc8d2dc49c8b8c"));return await e.json()}catch(r){console.log(r)}}(e,A);console.log(c),document.getElementById("current-location").innerHTML=c.name,function(r){const e=document.getElementById("current-weather-icon");e.removeAttribute("class"),e.classList.add("fa-solid"),"Thunderstorm"===r?(e.classList.add("fa-cloud-bolt"),document.body.style.background="url(".concat(i,") center center fixed")):"Drizzle"===r?(e.classList.add("fa-cloud-rain"),document.body.style.background="url(".concat(n,") center center fixed")):"Rain"===r?(e.classList.add("fa-cloud-showers-heavy"),document.body.style.background="url(".concat(i,") center center fixed")):"Snow"===r?(e.classList.add("fa-snow-flake"),document.body.style.background="url(".concat(a,") center center fixed")):"Clouds"===r?(e.classList.add("fa-cloud"),document.body.style.background="url(".concat(o,") center center fixed")):"Haze"===r?(e.classList.add("fa-smog"),document.body.style.background="url(".concat(n,") center center fixed")):(e.classList.add("fa-sun"),document.body.style.background="url(".concat(t,") center center fixed"))}(c.weather[0].main),document.getElementById("current-temperature").innerHTML=r(Math.round(c.main.temp),A),document.getElementById("current-description").innerHTML=c.weather[0].main,document.getElementById("current-high").innerHTML="H: ".concat(r(Math.round(c.main.temp_max),A),"&nbsp;/&nbsp;"),document.getElementById("current-low").innerHTML="L: ".concat(r(Math.round(c.main.temp_min),A)),document.getElementById("current-feel").innerHTML="Feels Like: ".concat(r(Math.round(c.main.feels_like),A)),document.getElementById("current-wind-speed").innerHTML="".concat(c.wind.speed," ").concat("imperial"===A?"mph":"m/s"),document.getElementById("current-wind-direction").innerHTML="".concat(function(r){return r>="350"&&r<="360"||r>="0"&&r<="10"?"N &#8593;":r>"10"&&r<="30"?"N/NE &#8599; ":r>"30"&&r<="60"?" NE &#8599;":r>"60"&&r<="80"?"E/NE &#8599; ":r>"80"&&r<="110"?"E &#8594; ":r>"110"&&r<="130"?" E/SE &#8600;":r>"130"&&r<="150"?"SE &#8600; ":r>"150"&&r<="170"?"S/SE &#8600; ":r>"170"&&r<="200"?"S &#8595;":r>"200"&&r<="220"?"S/SW &#8601; ":r>"220"&&r<="240"?"SW &#8601; ":r>"240"&&r<="260"?"W/SW &#8601;":r>"260"&&r<="290"?"W &#8592;":r>"290"&&r<="310"?"W/NW &#8598;":r>"310"&&r<="330"?" NW &#8598;":r>"330"&&r<="350"?" N/NW &#8598;":void 0}(c.wind.deg)),document.getElementById("current-humidity").innerHTML="Humidity: ".concat(c.main.humidity,"%"),document.getElementById("current-pressure").innerHTML="Pressure: ".concat(c.main.pressure," mB")}catch{!function(){if(!document.getElementById("error-message")){const r=document.querySelector(".header"),n=document.createElement("p");n.setAttribute("id","error-message"),n.innerHTML="Invalid location. Please use the following format 'City' or 'City, State' or 'Zip Code'",r.appendChild(n)}}()}}var p=e(379),d=e.n(p),l=e(795),u=e.n(l),f=e(569),m=e.n(f),g=e(565),h=e.n(g),E=e(216),C=e.n(E),x=e(589),B=e.n(x),b=e(426),y={};y.styleTagTransform=B(),y.setAttributes=h(),y.insert=m().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=C(),d()(b.Z,y),b.Z&&b.Z.locals&&b.Z.locals,s(c,A),function(){const r=document.getElementById("city-input");r.addEventListener("keydown",(n=>{"Enter"===n.key&&(c=r.value,s(c,A))})),document.getElementById("search-icon").addEventListener("click",(()=>{c=r.value,s(c,A)}))}(),function(){const r=document.getElementById("select-wrapper"),n=document.createElement("div"),e=document.getElementById("unit-select");n.classList.add("drop-down"),r.appendChild(n);const t=document.createElement("div"),o=document.createElement("div");t.setAttribute("id","option-one"),t.innerHTML="°F",o.setAttribute("id","option-two"),o.innerHTML="°C",n.appendChild(t),n.appendChild(o),e.addEventListener("click",(()=>{n.style.display="block"})),t.addEventListener("click",(()=>{A="imperial",e.innerHTML="°F",n.style.display="none",s(c,A)})),o.addEventListener("click",(()=>{A="metric",e.innerHTML="°C",n.style.display="none",s(c,A)})),document.addEventListener("click",(r=>{r.target.closest("#select-wrapper")||(n.style.display="none")}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWlCLFNBQVMsS0FDbkNLLEVBQVNwSCxNQUFNd0gsUUFBVSxPQUF6QixJQUdGRixFQUFVUCxpQkFBaUIsU0FBUyxLQUNsQzNDLEVBQVEsV0FDUmlELEVBQVdyQyxVQUFZLEtBQ3ZCb0MsRUFBU3BILE1BQU13SCxRQUFVLE9BQ3pCakQsRUFBV0YsRUFBTUQsRUFBakIsSUFHRm1ELEVBQVVSLGlCQUFpQixTQUFTLEtBQ2xDM0MsRUFBUSxTQUNSaUQsRUFBV3JDLFVBQVksS0FDdkJvQyxFQUFTcEgsTUFBTXdILFFBQVUsT0FDekJqRCxFQUFXRixFQUFNRCxFQUFqQixJQUdGakUsU0FBUzRHLGlCQUFpQixTQUFVQyxJQUM3QkEsRUFBTS9HLE9BQU93SCxRQUFRLHFCQUN0QkwsRUFBU3BILE1BQU13SCxRQUFVLE9BQzVCLEdBRUosQ0F5RkNFLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaGVscGVycy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy91aS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9hcGkuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcImltZ3Mvc3VubnkuanBnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1OdW5pdG86d2dodEA0MDA7NTAwOzYwMDs3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImlucHV0IHtcXHJcXG4gICAgZm9udC1mYW1pbHk6ICdOdW5pdG8nLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIikgY2VudGVyIGNlbnRlciBmaXhlZDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgZm9udC1mYW1pbHk6ICdOdW5pdG8nLCBzYW5zLXNlcmlmO1xcclxcbiAgdGV4dC1zaGFkb3c6IDBweCAwcHggM3B4ICMwMDA7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbiNjb250YWluZXIge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXJnaW4tdG9wOiAzMHB4O1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4ud2VhdGhlci1mb3JlY2FzdHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcXHJcXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDE1cHggNDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xcclxcbiAgICBjb2xvcjogI2ZmZjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuI2RhaWx5LXdlYXRoZXItaW5mbyB7XFxyXFxuICBtYXJnaW4tdG9wOiAzdnc7XFxyXFxuICB3aWR0aDogNTAwcHg7XFxyXFxuICBoZWlnaHQ6IDUwMHB4O1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogNXZ3O1xcclxcbiAgei1pbmRleDogMTtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtbG9jYXRpb24ge1xcclxcbiAgbWFyZ2luLXRvcDogNTBweDtcXHJcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXdlYXRoZXItY29udGFpbmVyIHtcXHJcXG4gIGZvbnQtc2l6ZTogM3JlbTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBtYXJnaW46IDIwcHg7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXdlYXRoZXItaWNvbiB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBsaW5lLWhlaWdodDogM3JlbTtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtZGVzY3JpcHRpb24ge1xcclxcbiAgbWFyZ2luOiAwcHggMjBweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAzcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC10ZW1wZXJhdHVyZSB7XFxyXFxuICBmb250LXNpemU6IDZyZW07XFxyXFxuICBmb250LXdlaWdodDogNjAwO1xcclxcblxcclxcbiAgbGluZS1oZWlnaHQ6IDZyZW07XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXRlbXAtcmFuZ2Uge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC1mZWVsIHtcXHJcXG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xcclxcbiAgXFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXdpbmQtaW5mbyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZm9udC1zaXplOiAxLjNyZW07XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAxLjNyZW07XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXdpbmQtaW5mbyBwIHtcXHJcXG4gIG1hcmdpbi10b3A6IDBweDtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtd2luZC1zcGVlZCB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcclxcbn1cXHJcXG4jY3VycmVudC13aW5kLWRpcmVjdGlvbiB7XFxyXFxuICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtYXRtb3NwaGVyaWMtaW5mbyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZm9udC1zaXplOiAxLjNyZW07XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LWF0bW9zcGhlcmljLWluZm8gcCB7XFxyXFxuICBtYXJnaW4tdG9wOiAwcHg7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXByZXNzdXJlIHtcXHJcXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jc2VhcmNoLXdyYXBwZXJ7XFxyXFxuICBvcGFjaXR5OiAwLjU7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNzZWFyY2gtd3JhcHBlcjpob3ZlcntcXHJcXG4gIG9wYWNpdHk6IDE7XFxyXFxufVxcclxcblxcclxcbiNjaXR5LWlucHV0e1xcclxcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgYm9yZGVyLWxlZnQ6IDA7XFxyXFxuICAgIGJvcmRlci1yaWdodDogMDtcXHJcXG4gICAgYm9yZGVyLXRvcDogMDtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSk7XFxyXFxuICAgIHdpZHRoOiA0MDBweDtcXHJcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIGNvbG9yOiNmZmY7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgbGluZS1oZWlnaHQ6IDUwcHg7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbiNjaXR5LWlucHV0OmZvY3Vze1xcclxcbiAgICBvdXRsaW5lOiBub25lO1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4jY2l0eS1pbnB1dDo6cGxhY2Vob2xkZXJ7XFxyXFxuICAgIGNvbG9yOiAjZmZmO1xcclxcbiAgICB0ZXh0LXNoYWRvdzogMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMTVweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XFxyXFxuICAgIG9wYWNpdHk6IDAuNTtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuI3NlYXJjaC1pY29ue1xcclxcbiAgY29sb3I6ICNmZmY7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBsZWZ0OiAtMzBweDtcXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgY3Vyc29yOnBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNzZWFyY2gtaWNvbjpob3ZlcntcXHJcXG4gIG9wYWNpdHk6IDE7XFxyXFxufVxcclxcblxcclxcbiNzZWFyY2gtaWNvbjphY3RpdmV7XFxyXFxuICB0cmFuc2Zvcm06IHNjYWxlKDAuOTApO1xcclxcbn1cXHJcXG5cXHJcXG4uaGVhZGVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xcclxcbiAgICB3aWR0aDogNTAwcHg7XFxyXFxufVxcclxcblxcclxcbiNzZWxlY3Qtd3JhcHBlcntcXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgd2lkdGg6IDYwcHg7XFxyXFxuICBjb2xvcjogI2ZmZjtcXHJcXG4gIGJvcmRlci1sZWZ0OiAwO1xcclxcbiAgYm9yZGVyLXJpZ2h0OiAwO1xcclxcbiAgYm9yZGVyLXRvcDogMDtcXHJcXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgbGluZS1oZWlnaHQ6IDUwcHg7XFxyXFxufVxcclxcblxcclxcbiNzZWxlY3Qtd3JhcHBlcntcXHJcXG4gIG9wYWNpdHk6IDAuNTtcXHJcXG59XFxyXFxuXFxyXFxuI3NlbGVjdC13cmFwcGVyOmhvdmVyLCAjc2VsZWN0LXdyYXBwZXI6Zm9jdXMsICNzZWxlY3Qtd3JhcHBlcjphY3RpdmV7XFxyXFxuICBvcGFjaXR5OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4jdW5pdC1zZWxlY3R7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUpO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4uZHJvcC1kb3due1xcclxcbiAgICBoZWlnaHQ6IDEwMHB4O1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7XFxyXFxuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xcclxcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxNXB4IDQwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcXHJcXG4gICAgei1pbmRleDogOTk7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbiNvcHRpb24tb25le1xcclxcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpO1xcclxcbn1cXHJcXG5cXHJcXG4jb3B0aW9uLW9uZSwgI29wdGlvbi10d297XFxyXFxuICBsaW5lLWhlaWdodDogNTBweDtcXHJcXG4gICAgd2lkdGg6IDYwcHg7XFxyXFxuICAgIG9wYWNpdHk6IDAuODtcXHJcXG59XFxyXFxuXFxyXFxuI29wdGlvbi1vbmU6aG92ZXIsICNvcHRpb24tdHdvOmhvdmVye1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpXFxyXFxufVxcclxcblxcclxcblxcclxcbiN3ZWVrbHktZm9yZWNhc3R7XFxyXFxuICAgIHdpZHRoOiA5NXZ3O1xcclxcbiAgICBoZWlnaHQ6IDI1MHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAxdnc7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDIwJSk7XFxyXFxufVxcclxcblxcclxcbiNlcnJvci1tZXNzYWdle1xcclxcbiAgY29sb3I6IHJlZDtcXHJcXG4gdGV4dC1zaGFkb3c6IDFweCAxcHggMHB4ICMwMDA7XFxyXFxucGFkZGluZy10b3A6IC0xMHB4O1xcclxcbiBtYXJnaW4tYm90dG9tOiAtNTBweDtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtJQUNJLGlDQUFpQztBQUNyQzs7QUFFQTtFQUNFLHVFQUFxRDtFQUNyRCxzQkFBc0I7RUFDdEIsNEJBQTRCO0VBQzVCLGlDQUFpQztFQUNqQyw2QkFBNkI7O0FBRS9COztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixnQkFBZ0I7O0FBRWxCOztBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLDBCQUEwQjtJQUMxQiwwRUFBMEU7SUFDMUUsV0FBVztJQUNYLG1CQUFtQjs7QUFFdkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsYUFBYTtFQUNiLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFNBQVM7RUFDVCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjs7RUFFaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlCQUFpQjs7QUFFbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsYUFBYTtJQUNiLDRDQUE0QztJQUM1QyxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFVBQVU7SUFDVixVQUFVO0lBQ1YsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhOztBQUVqQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCwyRUFBMkU7SUFDM0UsWUFBWTs7QUFFaEI7Ozs7QUFJQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsY0FBYztFQUNkLGVBQWU7RUFDZixhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0lBQ0ksNENBQTRDO0FBQ2hEOzs7OztBQUtBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQiwyQ0FBMkM7SUFDM0MsMEJBQTBCO0lBQzFCLDBFQUEwRTtJQUMxRSxXQUFXO0lBQ1gsYUFBYTs7QUFFakI7O0FBRUE7SUFDSSx3Q0FBd0M7QUFDNUM7O0FBRUE7RUFDRSxpQkFBaUI7SUFDZixXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7QUFFQTtJQUNJO0FBQ0o7OztBQUdBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHFDQUFxQztBQUN6Qzs7QUFFQTtFQUNFLFVBQVU7Q0FDWCw2QkFBNkI7QUFDOUIsa0JBQWtCO0NBQ2pCLG9CQUFvQjtBQUNyQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1OdW5pdG86d2dodEA0MDA7NTAwOzYwMDs3MDAmZGlzcGxheT1zd2FwJyk7XFxyXFxuXFxyXFxuaW5wdXQge1xcclxcbiAgICBmb250LWZhbWlseTogJ051bml0bycsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgYmFja2dyb3VuZDogdXJsKCdpbWdzL3N1bm55LmpwZycpIGNlbnRlciBjZW50ZXIgZml4ZWQ7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnTnVuaXRvJywgc2Fucy1zZXJpZjtcXHJcXG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDNweCAjMDAwO1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4jY29udGFpbmVyIHtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgbWFyZ2luLXRvcDogMzBweDtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLndlYXRoZXItZm9yZWNhc3R7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7XFxyXFxuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xcclxcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxNXB4IDQwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcXHJcXG4gICAgY29sb3I6ICNmZmY7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbiNkYWlseS13ZWF0aGVyLWluZm8ge1xcclxcbiAgbWFyZ2luLXRvcDogM3Z3O1xcclxcbiAgd2lkdGg6IDUwMHB4O1xcclxcbiAgaGVpZ2h0OiA1MDBweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDV2dztcXHJcXG4gIHotaW5kZXg6IDE7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LWxvY2F0aW9uIHtcXHJcXG4gIG1hcmdpbi10b3A6IDUwcHg7XFxyXFxuICBmb250LXNpemU6IDJyZW07XFxyXFxuICBmb250LXdlaWdodDogNTAwO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC13ZWF0aGVyLWNvbnRhaW5lciB7XFxyXFxuICBmb250LXNpemU6IDNyZW07XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgbWFyZ2luOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC13ZWF0aGVyLWljb24ge1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgbGluZS1oZWlnaHQ6IDNyZW07XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LWRlc2NyaXB0aW9uIHtcXHJcXG4gIG1hcmdpbjogMHB4IDIwcHg7XFxyXFxuICBsaW5lLWhlaWdodDogM3JlbTtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtdGVtcGVyYXR1cmUge1xcclxcbiAgZm9udC1zaXplOiA2cmVtO1xcclxcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG5cXHJcXG4gIGxpbmUtaGVpZ2h0OiA2cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC10ZW1wLXJhbmdlIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmb250LXNpemU6IDEuM3JlbTtcXHJcXG59XFxyXFxuXFxyXFxuI2N1cnJlbnQtZmVlbCB7XFxyXFxuICBtYXJnaW4tbGVmdDogMzBweDtcXHJcXG4gIFxcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC13aW5kLWluZm8ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxyXFxuICBsaW5lLWhlaWdodDogMS4zcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC13aW5kLWluZm8gcCB7XFxyXFxuICBtYXJnaW4tdG9wOiAwcHg7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LXdpbmQtc3BlZWQge1xcclxcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG59XFxyXFxuI2N1cnJlbnQtd2luZC1kaXJlY3Rpb24ge1xcclxcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbiNjdXJyZW50LWF0bW9zcGhlcmljLWluZm8ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC1hdG1vc3BoZXJpYy1pbmZvIHAge1xcclxcbiAgbWFyZ2luLXRvcDogMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jY3VycmVudC1wcmVzc3VyZSB7XFxyXFxuICBtYXJnaW4tbGVmdDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuI3NlYXJjaC13cmFwcGVye1xcclxcbiAgb3BhY2l0eTogMC41O1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4jc2VhcmNoLXdyYXBwZXI6aG92ZXJ7XFxyXFxuICBvcGFjaXR5OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4jY2l0eS1pbnB1dHtcXHJcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGJvcmRlci1sZWZ0OiAwO1xcclxcbiAgICBib3JkZXItcmlnaHQ6IDA7XFxyXFxuICAgIGJvcmRlci10b3A6IDA7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUpO1xcclxcbiAgICB3aWR0aDogNDAwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBjb2xvcjojZmZmO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG4jY2l0eS1pbnB1dDpmb2N1c3tcXHJcXG4gICAgb3V0bGluZTogbm9uZTtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuI2NpdHktaW5wdXQ6OnBsYWNlaG9sZGVye1xcclxcbiAgICBjb2xvcjogI2ZmZjtcXHJcXG4gICAgdGV4dC1zaGFkb3c6IDAgNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDE1cHggNDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xcclxcbiAgICBvcGFjaXR5OiAwLjU7XFxyXFxuXFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbiNzZWFyY2gtaWNvbntcXHJcXG4gIGNvbG9yOiAjZmZmO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgbGVmdDogLTMwcHg7XFxyXFxuICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG4gIGN1cnNvcjpwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4jc2VhcmNoLWljb246aG92ZXJ7XFxyXFxuICBvcGFjaXR5OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4jc2VhcmNoLWljb246YWN0aXZle1xcclxcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjkwKTtcXHJcXG59XFxyXFxuXFxyXFxuLmhlYWRlcntcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcXHJcXG4gICAgd2lkdGg6IDUwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jc2VsZWN0LXdyYXBwZXJ7XFxyXFxuICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG4gIHdpZHRoOiA2MHB4O1xcclxcbiAgY29sb3I6ICNmZmY7XFxyXFxuICBib3JkZXItbGVmdDogMDtcXHJcXG4gIGJvcmRlci1yaWdodDogMDtcXHJcXG4gIGJvcmRlci10b3A6IDA7XFxyXFxuICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIGxpbmUtaGVpZ2h0OiA1MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jc2VsZWN0LXdyYXBwZXJ7XFxyXFxuICBvcGFjaXR5OiAwLjU7XFxyXFxufVxcclxcblxcclxcbiNzZWxlY3Qtd3JhcHBlcjpob3ZlciwgI3NlbGVjdC13cmFwcGVyOmZvY3VzLCAjc2VsZWN0LXdyYXBwZXI6YWN0aXZle1xcclxcbiAgb3BhY2l0eTogMTtcXHJcXG59XFxyXFxuXFxyXFxuI3VuaXQtc2VsZWN0e1xcclxcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1KTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuLmRyb3AtZG93bntcXHJcXG4gICAgaGVpZ2h0OiAxMDBweDtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xcclxcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNXB4KTtcXHJcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMTVweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XFxyXFxuICAgIHotaW5kZXg6IDk5O1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4jb3B0aW9uLW9uZXtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTtcXHJcXG59XFxyXFxuXFxyXFxuI29wdGlvbi1vbmUsICNvcHRpb24tdHdve1xcclxcbiAgbGluZS1oZWlnaHQ6IDUwcHg7XFxyXFxuICAgIHdpZHRoOiA2MHB4O1xcclxcbiAgICBvcGFjaXR5OiAwLjg7XFxyXFxufVxcclxcblxcclxcbiNvcHRpb24tb25lOmhvdmVyLCAjb3B0aW9uLXR3bzpob3ZlcntcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KVxcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4jd2Vla2x5LWZvcmVjYXN0e1xcclxcbiAgICB3aWR0aDogOTV2dztcXHJcXG4gICAgaGVpZ2h0OiAyNTBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMXZ3O1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAyMCUpO1xcclxcbn1cXHJcXG5cXHJcXG4jZXJyb3ItbWVzc2FnZXtcXHJcXG4gIGNvbG9yOiByZWQ7XFxyXFxuIHRleHQtc2hhZG93OiAxcHggMXB4IDBweCAjMDAwO1xcclxcbnBhZGRpbmctdG9wOiAtMTBweDtcXHJcXG4gbWFyZ2luLWJvdHRvbTogLTUwcHg7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImV4cG9ydCB7YWRkVGVtcFVuaXRzfTtcclxuXHJcbmZ1bmN0aW9uIGFkZFRlbXBVbml0cyhkYXRhLCB1bml0cykge1xyXG4gIHN3aXRjaCAodW5pdHMpIHtcclxuICAgIGNhc2UgJ2ltcGVyaWFsJzpcclxuICAgICAgcmV0dXJuIGAke2RhdGF9IMKwRmA7XHJcbiAgICBjYXNlICdtZXRyaWMnOlxyXG4gICAgICByZXR1cm4gYCR7ZGF0YX0gwrBDYDtcclxuICB9XHJcbn0iLCJleHBvcnQgeyBpbml0LCB1cGRhdGVJbmZvfTtcclxuaW1wb3J0IHsgZ2V0V2VhdGhlciwgZ2V0V2Vla2x5Rm9yZWNhc3QgfSBmcm9tICcuL2FwaS5qcyc7XHJcbmltcG9ydCB7YWRkVGVtcFVuaXRzfSBmcm9tICcuL2hlbHBlcnMnO1xyXG5pbXBvcnQgb3ZlcmNhc3QgZnJvbSAnLi9pbWdzL292ZXJjYXN0LmpwZyc7XHJcbmltcG9ydCBzdW5ueSBmcm9tICcuL2ltZ3Mvc3VubnkuanBnJztcclxuaW1wb3J0IGNsb3VkeSBmcm9tICcuL2ltZ3MvY2xvdWR5LmpwZyc7XHJcbmltcG9ydCByYWlueSBmcm9tICcuL2ltZ3MvcmFpbnkuanBnJztcclxuaW1wb3J0IHNub3d5IGZyb20gJy4vaW1ncy9zbm93eS5qcGcnO1xyXG5cclxubGV0IHVuaXRzID0gJ2ltcGVyaWFsJztcclxubGV0IGNpdHkgPSAnRm9ydCBXb3J0aCc7XHJcblxyXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVJbmZvKGNpdHksIHVuaXRzKSB7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXJyb3ItbWVzc2FnZScpKXtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXJyb3ItbWVzc2FnZScpLnJlbW92ZSgpfVxyXG5cclxuICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0V2VhdGhlcihjaXR5LCB1bml0cyk7XHJcbiAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1cnJlbnQtbG9jYXRpb24nKS5pbm5lckhUTUwgPSBkYXRhLm5hbWU7XHJcblxyXG4gIHNldFdlYXRoZXJUaGVtZShkYXRhLndlYXRoZXJbMF0ubWFpbik7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1cnJlbnQtdGVtcGVyYXR1cmUnKS5pbm5lckhUTUwgPSBhZGRUZW1wVW5pdHMoXHJcbiAgICBNYXRoLnJvdW5kKGRhdGEubWFpbi50ZW1wKSxcclxuICAgIHVuaXRzXHJcbiAgKTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudC1kZXNjcmlwdGlvbicpLmlubmVySFRNTCA9XHJcbiAgICBkYXRhLndlYXRoZXJbMF0ubWFpbjtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudC1oaWdoJykuaW5uZXJIVE1MID0gYEg6ICR7YWRkVGVtcFVuaXRzKFxyXG4gICAgTWF0aC5yb3VuZChkYXRhLm1haW4udGVtcF9tYXgpLFxyXG4gICAgdW5pdHNcclxuICApfSZuYnNwOy8mbmJzcDtgO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW50LWxvdycpLmlubmVySFRNTCA9IGBMOiAke2FkZFRlbXBVbml0cyhcclxuICAgIE1hdGgucm91bmQoZGF0YS5tYWluLnRlbXBfbWluKSxcclxuICAgIHVuaXRzXHJcbiAgKX1gO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgJ2N1cnJlbnQtZmVlbCdcclxuICApLmlubmVySFRNTCA9IGBGZWVscyBMaWtlOiAke2FkZFRlbXBVbml0cyhcclxuICAgIE1hdGgucm91bmQoZGF0YS5tYWluLmZlZWxzX2xpa2UpLFxyXG4gICAgdW5pdHNcclxuICApfWA7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1cnJlbnQtd2luZC1zcGVlZCcpLmlubmVySFRNTCA9IGAke1xyXG4gICAgZGF0YS53aW5kLnNwZWVkXHJcbiAgfSAke3VuaXRzID09PSAnaW1wZXJpYWwnID8gJ21waCcgOiAnbS9zJ31gO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgJ2N1cnJlbnQtd2luZC1kaXJlY3Rpb24nXHJcbiAgKS5pbm5lckhUTUwgPSBgJHtjb252ZXJ0V2luZERpcmVjdGlvbihkYXRhLndpbmQuZGVnKX1gO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgJ2N1cnJlbnQtaHVtaWRpdHknXHJcbiAgKS5pbm5lckhUTUwgPSBgSHVtaWRpdHk6ICR7ZGF0YS5tYWluLmh1bWlkaXR5fSVgO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgJ2N1cnJlbnQtcHJlc3N1cmUnXHJcbiAgKS5pbm5lckhUTUwgPSBgUHJlc3N1cmU6ICR7ZGF0YS5tYWluLnByZXNzdXJlfSBtQmA7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICBkaXNwbGF5RXJyb3IoKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXREcm9wZG93bigpIHtcclxuICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbGVjdC13cmFwcGVyJyk7XHJcbiAgY29uc3QgZHJvcERvd24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBjb25zdCB1bml0U2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VuaXQtc2VsZWN0Jyk7XHJcbiAgZHJvcERvd24uY2xhc3NMaXN0LmFkZCgnZHJvcC1kb3duJyk7XHJcbiAgd3JhcHBlci5hcHBlbmRDaGlsZChkcm9wRG93bik7XHJcblxyXG4gIGNvbnN0IG9wdGlvbk9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIGNvbnN0IG9wdGlvblR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cclxuICBvcHRpb25PbmUuc2V0QXR0cmlidXRlKCdpZCcsICdvcHRpb24tb25lJyk7XHJcbiAgb3B0aW9uT25lLmlubmVySFRNTCA9ICfCsEYnO1xyXG4gIG9wdGlvblR3by5zZXRBdHRyaWJ1dGUoJ2lkJywgJ29wdGlvbi10d28nKTtcclxuICBvcHRpb25Ud28uaW5uZXJIVE1MID0gJ8KwQyc7XHJcbiAgZHJvcERvd24uYXBwZW5kQ2hpbGQob3B0aW9uT25lKTtcclxuICBkcm9wRG93bi5hcHBlbmRDaGlsZChvcHRpb25Ud28pO1xyXG5cclxuICB1bml0U2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgZHJvcERvd24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgfSk7XHJcblxyXG4gIG9wdGlvbk9uZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIHVuaXRzID0gXCJpbXBlcmlhbFwiO1xyXG4gICAgdW5pdFNlbGVjdC5pbm5lckhUTUwgPSAnwrBGJztcclxuICAgIGRyb3BEb3duLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB1cGRhdGVJbmZvKGNpdHksIHVuaXRzKTtcclxuICB9KTtcclxuXHJcbiAgb3B0aW9uVHdvLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgdW5pdHMgPSBcIm1ldHJpY1wiO1xyXG4gICAgdW5pdFNlbGVjdC5pbm5lckhUTUwgPSAnwrBDJztcclxuICAgIGRyb3BEb3duLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB1cGRhdGVJbmZvKGNpdHksIHVuaXRzKTtcclxuICB9KTtcclxuXHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgIGlmICghZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCIjc2VsZWN0LXdyYXBwZXJcIikpIHtcclxuICAgICAgICBkcm9wRG93bi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgfVxyXG4gIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldFdlYXRoZXJUaGVtZShkYXRhKSB7XHJcbiAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW50LXdlYXRoZXItaWNvbicpO1xyXG4gIGljb24ucmVtb3ZlQXR0cmlidXRlKCdjbGFzcycpO1xyXG4gIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtc29saWQnKTtcclxuICBpZiAoZGF0YSA9PT0gJ1RodW5kZXJzdG9ybScpIHtcclxuICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtY2xvdWQtYm9sdCcpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke3JhaW55fSkgY2VudGVyIGNlbnRlciBmaXhlZGA7XHJcbiAgfSBlbHNlIGlmIChkYXRhID09PSAnRHJpenpsZScpIHtcclxuICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtY2xvdWQtcmFpbicpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke292ZXJjYXN0fSkgY2VudGVyIGNlbnRlciBmaXhlZGA7XHJcbiAgfSBlbHNlIGlmIChkYXRhID09PSAnUmFpbicpIHtcclxuICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtY2xvdWQtc2hvd2Vycy1oZWF2eScpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke3JhaW55fSkgY2VudGVyIGNlbnRlciBmaXhlZGA7XHJcbiAgfSBlbHNlIGlmIChkYXRhID09PSAnU25vdycpIHtcclxuICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtc25vdy1mbGFrZScpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke3Nub3d5fSkgY2VudGVyIGNlbnRlciBmaXhlZGA7XHJcbiAgfSBlbHNlIGlmIChkYXRhID09PSAnQ2xvdWRzJykge1xyXG4gICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1jbG91ZCcpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke2Nsb3VkeX0pIGNlbnRlciBjZW50ZXIgZml4ZWRgO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA9PT0gJ0hhemUnKSB7XHJcbiAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNtb2cnKTtcclxuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZCA9IGB1cmwoJHtvdmVyY2FzdH0pIGNlbnRlciBjZW50ZXIgZml4ZWRgO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXN1bicpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gYHVybCgke3N1bm55fSkgY2VudGVyIGNlbnRlciBmaXhlZGA7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjb252ZXJ0V2luZERpcmVjdGlvbihkYXRhKSB7XHJcbiAgaWYgKChkYXRhID49ICczNTAnICYmIGRhdGEgPD0gJzM2MCcpIHx8IChkYXRhID49ICcwJyAmJiBkYXRhIDw9ICcxMCcpKSB7XHJcbiAgICByZXR1cm4gJ04gJiM4NTkzOyc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzEwJyAmJiBkYXRhIDw9ICczMCcpIHtcclxuICAgIHJldHVybiAnTi9ORSAmIzg1OTk7ICc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzMwJyAmJiBkYXRhIDw9ICc2MCcpIHtcclxuICAgIHJldHVybiAnIE5FICYjODU5OTsnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICc2MCcgJiYgZGF0YSA8PSAnODAnKSB7XHJcbiAgICByZXR1cm4gJ0UvTkUgJiM4NTk5OyAnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICc4MCcgJiYgZGF0YSA8PSAnMTEwJykge1xyXG4gICAgcmV0dXJuICdFICYjODU5NDsgJztcclxuICB9IGVsc2UgaWYgKGRhdGEgPiAnMTEwJyAmJiBkYXRhIDw9ICcxMzAnKSB7XHJcbiAgICByZXR1cm4gJyBFL1NFICYjODYwMDsnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICcxMzAnICYmIGRhdGEgPD0gJzE1MCcpIHtcclxuICAgIHJldHVybiAnU0UgJiM4NjAwOyAnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICcxNTAnICYmIGRhdGEgPD0gJzE3MCcpIHtcclxuICAgIHJldHVybiAnUy9TRSAmIzg2MDA7ICc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzE3MCcgJiYgZGF0YSA8PSAnMjAwJykge1xyXG4gICAgcmV0dXJuICdTICYjODU5NTsnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICcyMDAnICYmIGRhdGEgPD0gJzIyMCcpIHtcclxuICAgIHJldHVybiAnUy9TVyAmIzg2MDE7ICc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzIyMCcgJiYgZGF0YSA8PSAnMjQwJykge1xyXG4gICAgcmV0dXJuICdTVyAmIzg2MDE7ICc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzI0MCcgJiYgZGF0YSA8PSAnMjYwJykge1xyXG4gICAgcmV0dXJuICdXL1NXICYjODYwMTsnO1xyXG4gIH0gZWxzZSBpZiAoZGF0YSA+ICcyNjAnICYmIGRhdGEgPD0gJzI5MCcpIHtcclxuICAgIHJldHVybiAnVyAmIzg1OTI7JztcclxuICB9IGVsc2UgaWYgKGRhdGEgPiAnMjkwJyAmJiBkYXRhIDw9ICczMTAnKSB7XHJcbiAgICByZXR1cm4gJ1cvTlcgJiM4NTk4Oyc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzMxMCcgJiYgZGF0YSA8PSAnMzMwJykge1xyXG4gICAgcmV0dXJuICcgTlcgJiM4NTk4Oyc7XHJcbiAgfSBlbHNlIGlmIChkYXRhID4gJzMzMCcgJiYgZGF0YSA8PSAnMzUwJykge1xyXG4gICAgcmV0dXJuICcgTi9OVyAmIzg1OTg7JztcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gaW5pdFNlYXJjaExpc3RlbmVyKCkge1xyXG4gIGNvbnN0IHNlYXJjaEZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NpdHktaW5wdXQnKTtcclxuICBzZWFyY2hGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XHJcbiAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XHJcbiAgICAgIGNpdHkgPSBzZWFyY2hGaWVsZC52YWx1ZTtcclxuICAgICAgdXBkYXRlSW5mbyhjaXR5LCB1bml0cyk7XHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbiAgY29uc3Qgc2VhcmNoSWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2gtaWNvbicpO1xyXG4gIHNlYXJjaEljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBjaXR5ID0gc2VhcmNoRmllbGQudmFsdWU7XHJcbiAgICAgIHVwZGF0ZUluZm8oY2l0eSwgdW5pdHMpO1xyXG4gIH0pXHJcbiAgO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gaW5pdCgpIHtcclxuICB1cGRhdGVJbmZvKGNpdHksIHVuaXRzKTtcclxuICBpbml0U2VhcmNoTGlzdGVuZXIoKTtcclxuICBpbml0RHJvcGRvd24oKTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BsYXlFcnJvcigpIHtcclxuICAgIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9yLW1lc3NhZ2UnKSl7XHJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJyk7XHJcbiAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Vycm9yLW1lc3NhZ2UnKTtcclxuICAgIHAuaW5uZXJIVE1MID0gXCJJbnZhbGlkIGxvY2F0aW9uLiBQbGVhc2UgdXNlIHRoZSBmb2xsb3dpbmcgZm9ybWF0ICdDaXR5JyBvciAnQ2l0eSwgU3RhdGUnIG9yICdaaXAgQ29kZSdcIjtcclxuICAgIGhlYWRlci5hcHBlbmRDaGlsZChwKTt9XHJcbn1cclxuIiwiZXhwb3J0IHtnZXRXZWF0aGVyLCBnZXRXZWVrbHlGb3JlY2FzdH07XHJcbmNvbnN0IGtleSA9ICdjNGNiMjY4NDVjYTlkZjViYmVkYzhkMmRjNDljOGI4Yyc7XHJcblxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXIoY2l0eSwgdW5pdHMpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcclxuICAgICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JnVuaXRzPSR7dW5pdHN9JmFwcGlkPSR7a2V5fWBcclxuICAgICAgKVxyXG4gICAgICAgIFxyXG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFdlZWtseUZvcmVjYXN0KGNpdHkpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcclxuICAgICAgICAgICAgYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS9mb3JlY2FzdD9xPSR7Y2l0eX0mYXBwaWQ9JHtrZXl9YFxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJhZGRUZW1wVW5pdHMiLCJ1bml0cyIsImNpdHkiLCJhc3luYyIsInVwZGF0ZUluZm8iLCJnZXRFbGVtZW50QnlJZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiZ2V0V2VhdGhlciIsImlubmVySFRNTCIsIm5hbWUiLCJpY29uIiwicmVtb3ZlQXR0cmlidXRlIiwiY2xhc3NMaXN0IiwiYWRkIiwiYm9keSIsImJhY2tncm91bmQiLCJyYWlueSIsIm92ZXJjYXN0Iiwic25vd3kiLCJjbG91ZHkiLCJzdW5ueSIsInNldFdlYXRoZXJUaGVtZSIsIndlYXRoZXIiLCJtYWluIiwiTWF0aCIsInJvdW5kIiwidGVtcCIsInRlbXBfbWF4IiwidGVtcF9taW4iLCJmZWVsc19saWtlIiwid2luZCIsInNwZWVkIiwiY29udmVydFdpbmREaXJlY3Rpb24iLCJkZWciLCJodW1pZGl0eSIsInByZXNzdXJlIiwiaGVhZGVyIiwiZGlzcGxheUVycm9yIiwic2VhcmNoRmllbGQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ2YWx1ZSIsImluaXRTZWFyY2hMaXN0ZW5lciIsIndyYXBwZXIiLCJkcm9wRG93biIsInVuaXRTZWxlY3QiLCJvcHRpb25PbmUiLCJvcHRpb25Ud28iLCJkaXNwbGF5IiwiY2xvc2VzdCIsImluaXREcm9wZG93biJdLCJzb3VyY2VSb290IjoiIn0=