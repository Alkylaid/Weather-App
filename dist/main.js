(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>p});var t=e(537),i=e.n(t),o=e(645),a=e.n(o),c=e(667),s=e.n(c),u=new URL(e(427),e.b),A=a()(i());A.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap);"]);var d=s()(u);A.push([n.id,"body {\r\n  background: url("+d+") center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 5px #000;\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  backdrop-filter: blur(5px);\r\n  height: 500px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #fff;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,uEAAqD;EACrD,sBAAsB;EACtB,4BAA4B;EAC5B,iCAAiC;EACjC,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,2CAA2C;EAC3C,0BAA0B;EAC1B,aAAa;EACb,mBAAmB;EACnB,0EAA0E;EAC1E,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,YAAY;AACd;;AAEA;EACE,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;;EAEhB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;;AAEnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;IACI,iBAAiB;AACrB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap');\r\n\r\nbody {\r\n  background: url('imgs/sunny.jpg') center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 5px #000;\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  backdrop-filter: blur(5px);\r\n  height: 500px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #fff;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n"],sourceRoot:""}]);const p=A},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var u=0;u<n.length;u++){var A=[].concat(n[u]);t&&a[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),r.push(A))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(i," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},a=[],c=0;c<n.length;c++){var s=n[c],u=t.base?s[0]+t.base:s[0],A=o[u]||0,d="".concat(u," ").concat(A);o[u]=A+1;var p=e(d),l={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(l);else{var f=i(l,t);t.byIndex=c,r.splice(c,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function i(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,i){var o=t(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var c=e(o[a]);r[c].references--}for(var s=t(n,i),u=0;u<o.length;u++){var A=e(o[u]);0===r[A].references&&(r[A].updater(),r.splice(A,1))}o=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,i&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},427:(n,r,e)=>{n.exports=e.p+"7efdee94197c5361067c.jpg"}},r={};function e(t){var i=r[t];if(void 0!==i)return i.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),i=e.n(t),o=e(569),a=e.n(o),c=e(565),s=e.n(c),u=e(216),A=e.n(u),d=e(589),p=e.n(d),l=e(426),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),r()(l.Z,f),l.Z&&l.Z.locals&&l.Z.locals;const m=e.p+"ac6841b2d35265cc4ac8.jpg";var g=e(427);const h=e.p+"aab7312709c244ba19d9.jpg",E=e.p+"33345080344652cdfa4e.jpg",y=e.p+"d7f8b6e2ffd6282237d9.jpg";function B(n,r){switch(r){case"imperial":return"".concat(n," °F");case"metric":return"".concat(n," °C")}}!async function(n,r){const e=await async function(n,r){try{const n=await fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat("Sydney","&units=").concat("metric","&appid=").concat("c4cb26845ca9df5bbedc8d2dc49c8b8c"));return await n.json()}catch(n){console.log(n)}}();console.log(e),document.getElementById("current-location").innerHTML=e.name,function(n){const r=document.getElementById("current-weather-icon");r.removeAttribute("class"),r.classList.add("fa-solid"),"Thunderstorm"===n?(r.classList.add("fa-cloud-bolt"),document.body.style.background="url(".concat(E,") center center fixed")):"Drizzle"===n?(r.classList.add("fa-cloud-rain"),document.body.style.background="url(".concat(m,") center center fixed")):"Rain"===n?(r.classList.add("fa-cloud-showers-heavy"),document.body.style.background="url(".concat(E,") center center fixed")):"Snow"===n?(r.classList.add("fa-snow-flake"),document.body.style.background="url(".concat(y,") center center fixed")):"Clouds"===n?(r.classList.add("fa-cloud"),document.body.style.background="url(".concat(h,") center center fixed")):(r.classList.add("fa-sun"),document.body.style.background="url(".concat(g,") center center fixed"))}(e.weather[0].main),document.getElementById("current-temperature").innerHTML=B(Math.round(e.main.temp),r),document.getElementById("current-description").innerHTML=e.weather[0].main,document.getElementById("current-high").innerHTML="H: ".concat(B(Math.round(e.main.temp_max),r),"&nbsp;/&nbsp;"),document.getElementById("current-low").innerHTML="L: ".concat(B(Math.round(e.main.temp_min),r)),document.getElementById("current-feel").innerHTML="Feels Like: ".concat(B(Math.round(e.main.feels_like),r)),document.getElementById("current-wind-speed").innerHTML="".concat(e.wind.speed," ").concat("m/s"),document.getElementById("current-wind-direction").innerHTML="".concat(function(n){return n>="350"&&n<="360"||n>="0"&&n<="10"?"&#8593;N":n>"10"&&n<="30"?"&#8599;N/NE":n>"30"&&n<="60"?"&#8599;NE":n>"60"&&n<="80"?"&#8594;E/NE":n>"80"&&n<="110"?"&#8594;E":n>"110"&&n<="130"?"&#8600;E/SE":n>"130"&&n<="150"?"&#8600;SE":n>"150"&&n<="170"?"&#8595;S/SE":n>"170"&&n<="200"?"&#8595;S":n>"200"&&n<="220"?"&#8601;S/SW":n>"220"&&n<="240"?"&#8601;SW":n>"240"&&n<="260"?"&#8592;W/SW":n>"260"&&n<="290"?"&#8592;W":n>"290"&&n<="310"?"&#8598;W/NW":n>"310"&&n<="330"?"&#8598;NW":n>"330"&&n<="350"?"&#8593;N/NW":void 0}(e.wind.deg)),document.getElementById("current-humidity").innerHTML="Humidity: ".concat(e.main.humidity,"%"),document.getElementById("current-pressure").innerHTML="Pressure: ".concat(e.main.pressure," mB")}(0,"metric")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,