(()=>{"use strict";var r={426:(r,n,e)=>{e.d(n,{Z:()=>l});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),A=e(667),c=e.n(A),s=new URL(e(427),e.b),p=a()(o());p.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap);"]);var d=c()(s);p.push([r.id,"input {\r\n    font-family: 'Nunito', sans-serif;\r\n}\r\n\r\nbody {\r\n  background: url("+d+") center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 3px #000;\r\n\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n\r\n}\r\n\r\n.weather-forecast{\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    color: #fff;\r\n    border-radius: 10px;\r\n\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 5vw;\r\n  z-index: 1;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n\r\n#search-wrapper{\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n}\r\n\r\n#search-wrapper:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#city-input{\r\n    background: transparent;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n    width: 400px;\r\n    font-size: 1.5rem;\r\n    padding: 0;\r\n    color:#fff;\r\n    cursor: pointer;\r\n    line-height: 50px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#city-input:focus{\r\n    outline: none;\r\n\r\n}\r\n\r\n#city-input::placeholder{\r\n    color: #fff;\r\n    text-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    opacity: 0.5;\r\n\r\n}\r\n\r\n\r\n\r\n#search-icon{\r\n  color: #fff;\r\n  position: relative;\r\n  left: -30px;\r\n  font-size: 1.5rem;\r\n  cursor:pointer;\r\n}\r\n\r\n#search-icon:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#search-icon:active{\r\n  transform: scale(0.90);\r\n}\r\n\r\n.header{\r\n    display: flex;\r\n    align-items: flex-end;\r\n}\r\n\r\n#select-wrapper{\r\n  font-size: 1.5rem;\r\n  width: 60px;\r\n  color: #fff;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-top: 0;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n}\r\n\r\n\r\n#unit-select{\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.50);\r\n    opacity: 0.8;\r\n\r\n}\r\n\r\n#unit-select:hover{\r\n  opacity: 1;\r\n}\r\n\r\n.drop-down{\r\n    height: 100px;\r\n    position: absolute;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    z-index: 99;\r\n    display: none;\r\n\r\n}\r\n\r\n#option-one{\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n}\r\n\r\n#option-one, #option-two{\r\n  line-height: 50px;\r\n    width: 60px;\r\n    opacity: 0.8;\r\n}\r\n\r\n#option-one:hover, #option-two:hover{\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n}\r\n\r\n\r\n#weekly-forecast{\r\n    width: 95vw;\r\n    height: 250px;\r\n    margin-bottom: 1vw;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,iCAAiC;AACrC;;AAEA;EACE,uEAAqD;EACrD,sBAAsB;EACtB,4BAA4B;EAC5B,iCAAiC;EACjC,6BAA6B;;AAE/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;;AAElB;;AAEA;IACI,2CAA2C;IAC3C,0BAA0B;IAC1B,0EAA0E;IAC1E,WAAW;IACX,mBAAmB;;AAEvB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,YAAY;AACd;;AAEA;EACE,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;;EAEhB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;;AAEnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;IACI,iBAAiB;AACrB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,UAAU;AACZ;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,eAAe;IACf,aAAa;IACb,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;IACjB,UAAU;IACV,UAAU;IACV,eAAe;IACf,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;;AAEjB;;AAEA;IACI,WAAW;IACX,2EAA2E;IAC3E,YAAY;;AAEhB;;;;AAIA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;IACI,aAAa;IACb,qBAAqB;AACzB;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,WAAW;EACX,cAAc;EACd,eAAe;EACf,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;;AAGA;IACI,kDAAkD;IAClD,YAAY;;AAEhB;;AAEA;EACE,UAAU;AACZ;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,2CAA2C;IAC3C,0BAA0B;IAC1B,0EAA0E;IAC1E,WAAW;IACX,aAAa;;AAEjB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;EACE,iBAAiB;IACf,WAAW;IACX,YAAY;AAChB;;AAEA;IACI;AACJ;;;AAGA;IACI,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,qCAAqC;AACzC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&display=swap');\r\n\r\ninput {\r\n    font-family: 'Nunito', sans-serif;\r\n}\r\n\r\nbody {\r\n  background: url('imgs/sunny.jpg') center center fixed;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  font-family: 'Nunito', sans-serif;\r\n  text-shadow: 0px 0px 3px #000;\r\n\r\n}\r\n\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n\r\n}\r\n\r\n.weather-forecast{\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    color: #fff;\r\n    border-radius: 10px;\r\n\r\n}\r\n\r\n#daily-weather-info {\r\n  margin-top: 3vw;\r\n  width: 500px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 5vw;\r\n  z-index: 1;\r\n}\r\n\r\n#current-location {\r\n  margin-top: 50px;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#current-weather-container {\r\n  font-size: 3rem;\r\n  display: flex;\r\n  margin: 20px;\r\n}\r\n\r\n#current-weather-icon {\r\n  margin: 0;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-description {\r\n  margin: 0px 20px;\r\n  line-height: 3rem;\r\n}\r\n\r\n#current-temperature {\r\n  font-size: 6rem;\r\n  font-weight: 600;\r\n\r\n  line-height: 6rem;\r\n}\r\n\r\n#current-temp-range {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-feel {\r\n  margin-left: 30px;\r\n  \r\n}\r\n\r\n#current-wind-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  justify-content: space-evenly;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#current-wind-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-wind-speed {\r\n    margin-left: 10px;\r\n}\r\n#current-wind-direction {\r\n  margin-left: 10px;\r\n}\r\n\r\n#current-atmospheric-info {\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#current-atmospheric-info p {\r\n  margin-top: 0px;\r\n}\r\n\r\n#current-pressure {\r\n  margin-left: 20px;\r\n}\r\n\r\n#search-wrapper{\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n}\r\n\r\n#search-wrapper:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#city-input{\r\n    background: transparent;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    border-top: 0;\r\n    border-bottom: 1px solid rgba(255, 255, 255);\r\n    width: 400px;\r\n    font-size: 1.5rem;\r\n    padding: 0;\r\n    color:#fff;\r\n    cursor: pointer;\r\n    line-height: 50px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#city-input:focus{\r\n    outline: none;\r\n\r\n}\r\n\r\n#city-input::placeholder{\r\n    color: #fff;\r\n    text-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    opacity: 0.5;\r\n\r\n}\r\n\r\n\r\n\r\n#search-icon{\r\n  color: #fff;\r\n  position: relative;\r\n  left: -30px;\r\n  font-size: 1.5rem;\r\n  cursor:pointer;\r\n}\r\n\r\n#search-icon:hover{\r\n  opacity: 1;\r\n}\r\n\r\n#search-icon:active{\r\n  transform: scale(0.90);\r\n}\r\n\r\n.header{\r\n    display: flex;\r\n    align-items: flex-end;\r\n}\r\n\r\n#select-wrapper{\r\n  font-size: 1.5rem;\r\n  width: 60px;\r\n  color: #fff;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-top: 0;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n}\r\n\r\n\r\n#unit-select{\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.50);\r\n    opacity: 0.8;\r\n\r\n}\r\n\r\n#unit-select:hover{\r\n  opacity: 1;\r\n}\r\n\r\n.drop-down{\r\n    height: 100px;\r\n    position: absolute;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 15px 40px rgba(0, 0, 0, 0.05);\r\n    z-index: 99;\r\n    display: none;\r\n\r\n}\r\n\r\n#option-one{\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n}\r\n\r\n#option-one, #option-two{\r\n  line-height: 50px;\r\n    width: 60px;\r\n    opacity: 0.8;\r\n}\r\n\r\n#option-one:hover, #option-two:hover{\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n}\r\n\r\n\r\n#weekly-forecast{\r\n    width: 95vw;\r\n    height: 250px;\r\n    margin-bottom: 1vw;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n}"],sourceRoot:""}]);const l=p},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<r.length;s++){var p=[].concat(r[s]);t&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],A=0;A<r.length;A++){var c=r[A],s=t.base?c[0]+t.base:c[0],p=i[s]||0,d="".concat(s," ").concat(p);i[s]=p+1;var l=e(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var f=o(u,t);t.byIndex=A,n.splice(A,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var A=e(i[a]);n[A].references--}for(var c=t(r,o),s=0;s<i.length;s++){var p=e(i[s]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}i=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},427:(r,n,e)=>{r.exports=e.p+"7efdee94197c5361067c.jpg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{function r(r,n){switch(n){case"imperial":return"".concat(r," °F");case"metric":return"".concat(r," °C")}}const n=e.p+"ac6841b2d35265cc4ac8.jpg";var t=e(427);const o=e.p+"aab7312709c244ba19d9.jpg",i=e.p+"33345080344652cdfa4e.jpg",a=e.p+"d7f8b6e2ffd6282237d9.jpg";let A="imperial",c="Fort Worth";async function s(e,A){const c=await async function(r,n){try{const e=await fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat(r,"&units=").concat(n,"&appid=").concat("c4cb26845ca9df5bbedc8d2dc49c8b8c"));return await e.json()}catch(r){console.log(r)}}(e,A);console.log(c),document.getElementById("current-location").innerHTML=c.name,function(r){const e=document.getElementById("current-weather-icon");e.removeAttribute("class"),e.classList.add("fa-solid"),"Thunderstorm"===r?(e.classList.add("fa-cloud-bolt"),document.body.style.background="url(".concat(i,") center center fixed")):"Drizzle"===r?(e.classList.add("fa-cloud-rain"),document.body.style.background="url(".concat(n,") center center fixed")):"Rain"===r?(e.classList.add("fa-cloud-showers-heavy"),document.body.style.background="url(".concat(i,") center center fixed")):"Snow"===r?(e.classList.add("fa-snow-flake"),document.body.style.background="url(".concat(a,") center center fixed")):"Clouds"===r?(e.classList.add("fa-cloud"),document.body.style.background="url(".concat(o,") center center fixed")):"Haze"===r?(e.classList.add("fa-smog"),document.body.style.background="url(".concat(n,") center center fixed")):(e.classList.add("fa-sun"),document.body.style.background="url(".concat(t,") center center fixed"))}(c.weather[0].main),document.getElementById("current-temperature").innerHTML=r(Math.round(c.main.temp),A),document.getElementById("current-description").innerHTML=c.weather[0].main,document.getElementById("current-high").innerHTML="H: ".concat(r(Math.round(c.main.temp_max),A),"&nbsp;/&nbsp;"),document.getElementById("current-low").innerHTML="L: ".concat(r(Math.round(c.main.temp_min),A)),document.getElementById("current-feel").innerHTML="Feels Like: ".concat(r(Math.round(c.main.feels_like),A)),document.getElementById("current-wind-speed").innerHTML="".concat(c.wind.speed," ").concat("imperial"===A?"mph":"m/s"),document.getElementById("current-wind-direction").innerHTML="".concat(function(r){return r>="350"&&r<="360"||r>="0"&&r<="10"?"N &#8593;":r>"10"&&r<="30"?"N/NE &#8599; ":r>"30"&&r<="60"?" NE &#8599;":r>"60"&&r<="80"?"E/NE &#8599; ":r>"80"&&r<="110"?"E &#8594; ":r>"110"&&r<="130"?" E/SE &#8600;":r>"130"&&r<="150"?"SE &#8600; ":r>"150"&&r<="170"?"S/SE &#8600; ":r>"170"&&r<="200"?"S &#8595;":r>"200"&&r<="220"?"S/SW &#8601; ":r>"220"&&r<="240"?"SW &#8601; ":r>"240"&&r<="260"?"W/SW &#8601;":r>"260"&&r<="290"?"W &#8592;":r>"290"&&r<="310"?"W/NW &#8598;":r>"310"&&r<="330"?" NW &#8598;":r>"330"&&r<="350"?" N/NW &#8598;":void 0}(c.wind.deg)),document.getElementById("current-humidity").innerHTML="Humidity: ".concat(c.main.humidity,"%"),document.getElementById("current-pressure").innerHTML="Pressure: ".concat(c.main.pressure," mB")}var p=e(379),d=e.n(p),l=e(795),u=e.n(l),f=e(569),m=e.n(f),g=e(565),h=e.n(g),E=e(216),C=e.n(E),b=e(589),x=e.n(b),B=e(426),y={};y.styleTagTransform=x(),y.setAttributes=h(),y.insert=m().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=C(),d()(B.Z,y),B.Z&&B.Z.locals&&B.Z.locals,function(){const r=document.getElementById("city-input");r.addEventListener("keydown",(n=>{"Enter"===n.key&&(c=r.value,s(c,A))})),document.getElementById("search-icon").addEventListener("click",(()=>{c=r.value,s(c,A)}))}(),function(){const r=document.getElementById("select-wrapper"),n=document.createElement("div"),e=document.getElementById("unit-select");n.classList.add("drop-down"),r.appendChild(n);const t=document.createElement("div"),o=document.createElement("div");t.setAttribute("id","option-one"),t.innerHTML="°F",o.setAttribute("id","option-two"),o.innerHTML="°C",n.appendChild(t),n.appendChild(o),e.addEventListener("click",(()=>{n.style.display="block"})),t.addEventListener("click",(()=>{A="imperial",e.innerHTML="°F",n.style.display="none",s(c,A)})),o.addEventListener("click",(()=>{A="metric",e.innerHTML="°C",n.style.display="none",s(c,A)})),document.addEventListener("click",(r=>{r.target.closest("#select-wrapper")||(n.style.display="none")}))}(),s(c,A)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,